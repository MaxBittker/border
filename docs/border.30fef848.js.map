{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"border.30fef848.js","sourceRoot":"..","sourcesContent":["var tileSize = 7;\nvar pixelRatio = 4;\nvar editorRatio = 4 * pixelRatio;\n\nlet frame = <HTMLElement>document.getElementById(\"editor-frame\");\nlet canvas = <HTMLCanvasElement>document.getElementById(\"editor\");\nlet guideCanvas = <HTMLCanvasElement>document.getElementById(\"guide\");\nlet renderCanvas = <HTMLCanvasElement>document.getElementById(\"render\");\ncanvas.width = tileSize * editorRatio * 3;\ncanvas.height = tileSize * editorRatio * 3;\nguideCanvas.width = tileSize * editorRatio * 3;\nguideCanvas.height = tileSize * editorRatio * 3;\nrenderCanvas.width = tileSize * pixelRatio * 3;\nrenderCanvas.height = tileSize * pixelRatio * 3;\n\nwindow.setTimeout(() => {\n  frame.style.height = canvas.getBoundingClientRect().width + \"px\";\n}, 500);\n\nvar ctx = canvas.getContext(\"2d\");\nvar guideCtx = guideCanvas.getContext(\"2d\");\nvar renderCtx = renderCanvas.getContext(\"2d\");\n\nvar isDown = false;\nvar isErasing = false;\nfunction newCell() {\n  let rows = new Array(tileSize).fill(0);\n  return rows.map((v, i) => new Array(tileSize).fill(0));\n}\nfunction newGrid() {\n  let rows = new Array(3).fill(0);\n  return rows.map((v, i) => {\n    let col = new Array(3).fill(0);\n    return col.map((v, i) => newCell());\n  });\n}\n\nlet map = newGrid();\n// console.log(map);\n\nfunction randomInt(amin, amax?: number) {\n  var min = amin;\n  var max = amax;\n  if (arguments.length == 1) {\n    min = 0;\n    max = amin;\n  }\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction randomLoc() {\n  return [randomInt(3), randomInt(3), randomInt(tileSize), randomInt(tileSize)];\n}\nfunction setLoc(loc, v = 1) {\n  let address = loc.slice(0, -1);\n  let lastPos = loc[loc.length - 1];\n  //   console.log(v);\n  address.reduce((acc, i) => acc[i], map)[lastPos] = v;\n}\nfunction getLoc(loc) {\n  return loc.reduce((acc, i) => acc[i], map);\n}\n\nfunction renderMap(map) {\n  renderCtx.fill();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  for (let sx = 0; sx < 3; sx++) {\n    for (let sy = 0; sy < 3; sy++) {\n      for (let cx = 0; cx < tileSize; cx++) {\n        for (let cy = 0; cy < tileSize; cy++) {\n          let v = getLoc([sx, sy, cx, cy]);\n\n          ctx.fillStyle = v == 1 ? \"#000\" : \"#fff0\";\n          renderCtx.fillStyle = v == 1 ? \"#000\" : \"#fff0\";\n          let gridX = (sx * tileSize + cx) * pixelRatio;\n          let gridY = (sy * tileSize + cy) * pixelRatio;\n\n          if (sx == 1 && sy == 1) {\n            continue;\n          }\n          renderCtx.clearRect(gridX, gridY, pixelRatio, pixelRatio);\n          renderCtx.fillRect(gridX, gridY, pixelRatio, pixelRatio);\n          gridX *= editorRatio / pixelRatio;\n          gridY *= editorRatio / pixelRatio;\n          ctx.fillRect(gridX + 1, gridY + 1, editorRatio - 1, editorRatio - 1);\n        }\n      }\n    }\n  }\n}\nfunction drawGuide() {\n  for (let index = 1; index < 3; index++) {\n    guideCtx.strokeStyle = \"#33f\";\n    guideCtx.lineWidth = 0.5;\n    let x = (index * canvas.width) / 3;\n    guideCtx.beginPath();\n    guideCtx.moveTo(x, 0);\n    guideCtx.lineTo(x, canvas.height);\n    guideCtx.stroke();\n    guideCtx.beginPath();\n    guideCtx.moveTo(0, x);\n    guideCtx.lineTo(canvas.height, x);\n    guideCtx.stroke();\n  }\n\n  for (let index = 0.0; index < 3 * tileSize; index++) {\n    guideCtx.strokeStyle = \"#ccc\";\n    let x = (index * canvas.width) / (3 * tileSize);\n    guideCtx.beginPath();\n    guideCtx.moveTo(x, 0);\n    guideCtx.lineTo(x, canvas.height);\n    guideCtx.stroke();\n    guideCtx.beginPath();\n    guideCtx.moveTo(0, x);\n    guideCtx.lineTo(canvas.height, x);\n    guideCtx.stroke();\n  }\n  let third = canvas.width / 3;\n  guideCtx.clearRect(third + 1, third + 1, third - 2, third - 2);\n  guideCtx.beginPath();\n  guideCtx.moveTo(third * 1, third * 2);\n  guideCtx.lineTo(third * 2, third * 1);\n  guideCtx.stroke();\n  guideCtx.beginPath();\n  guideCtx.moveTo(third * 1, third * 1);\n  guideCtx.lineTo(third * 2, third * 2);\n  guideCtx.stroke();\n}\ndrawGuide();\nrenderMap(map);\nsetBorder();\nfunction setBorder() {\n  let dataURI = renderCanvas.toDataURL();\n  let target = <HTMLElement>document.getElementById(\"target\");\n\n  let style = <HTMLStyleElement>document.getElementById(\"border-style\");\n  if (style) style.remove();\n  style = document.createElement(\"style\");\n  style.id = \"border-style\";\n  document.head.appendChild(style);\n  //   style.sheet.insertRule(`.broider {padding-right: ${(value / 5) * mult}px}`);\n  let css = `.broider {\n  border-image:  url(\"${dataURI}\");\n  border-image-repeat:  round;\n  border-image-slice:  ${tileSize * pixelRatio};\n  border-image-width:  ${tileSize * pixelRatio}px;\n  border-width:  ${tileSize * pixelRatio}px;\n  border-style:  solid;\n}`;\n  style.sheet.insertRule(css);\n  target.textContent = css;\n}\nlet draw = (e, isClick = false) => {\n  let { left, top, width, height } = canvas.getBoundingClientRect();\n  let x = e.clientX - left;\n  let y = e.clientY - top;\n  let canvasX = (x / width) * canvas.width;\n  let canvasY = (y / height) * canvas.height;\n  let gridX = Math.floor(canvasX / editorRatio);\n  let gridY = Math.floor(canvasY / editorRatio);\n\n  let sx = Math.floor(gridX / tileSize);\n  let sy = Math.floor(gridY / tileSize);\n  let cx = gridX % tileSize;\n  let cy = gridY % tileSize;\n  let loc = [sx, sy, cx, cy];\n  let v = getLoc(loc) || 0;\n  if (isClick && v == 1) {\n    isErasing = true;\n  }\n\n  if (!isClick) {\n    v = 0;\n  }\n\n  if (isErasing) {\n    v = 1;\n  }\n\n  if (isDown) {\n    setLoc(loc, 1 - v);\n    renderMap(map);\n  } else {\n    renderMap(map);\n\n    ctx.fillStyle = getLoc(loc) == 1 ? \"#228\" : \"#ddf\";\n    ctx.fillRect(\n      gridX * editorRatio + 1,\n      gridY * editorRatio + 1,\n      editorRatio - 1,\n      editorRatio - 1\n    );\n  }\n  window.setTimeout(setBorder, 0);\n};\ncanvas.addEventListener(\"mousedown\", e => {\n  isDown = true;\n  draw(e, true);\n});\ncanvas.addEventListener(\"mousemove\", draw);\n\nwindow.addEventListener(\"mousedown\", () => {\n  isDown = true;\n});\nwindow.addEventListener(\"mouseup\", () => {\n  isDown = false;\n  isErasing = false;\n});\ncanvas.addEventListener(\"touchend\", e => {\n  isDown = false;\n  isErasing = false;\n});\ncanvas.addEventListener(\"touchstart\", e => {\n  isDown = true;\n\n  e.preventDefault();\n\n  const touches = e.targetTouches;\n  for (let i = 0; i < touches.length; i++) {\n    e[\"clientX\"] = touches[i].clientX;\n    e[\"clientY\"] = touches[i].clientY;\n    draw(e);\n  }\n});\ncanvas.addEventListener(\"touchmove\", e => {\n  e.preventDefault();\n  isDown = true;\n\n  const touches = e.targetTouches;\n  for (let i = 0; i < touches.length; i++) {\n    e[\"clientX\"] = touches[i].clientX;\n    e[\"clientY\"] = touches[i].clientY;\n    draw(e);\n  }\n});\n"]}