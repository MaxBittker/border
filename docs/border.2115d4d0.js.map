{"version":3,"sources":["node_modules/toggle-selection/index.js","node_modules/copy-to-clipboard/index.js","state.ts","utils.ts","render.ts","index.ts"],"names":[],"mappings":"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","file":"border.2115d4d0.js","sourceRoot":"..","sourcesContent":["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","var tileSize = 7;\nvar editorRatio = 16;\n\nexport { tileSize, editorRatio };\n","import { tileSize } from \"./state\";\n\nfunction newCell() {\n  let rows = new Array(tileSize).fill(0);\n  return rows.map((v, i) => new Array(tileSize).fill(0));\n}\nfunction newGrid() {\n  let rows = new Array(3).fill(0);\n  return rows.map((v, i) => {\n    let col = new Array(3).fill(0);\n    return col.map((v, i) => newCell());\n  });\n}\n\nfunction randomInt(amin, amax?: number) {\n  var min = amin;\n  var max = amax;\n  if (arguments.length == 1) {\n    min = 0;\n    max = amin;\n  }\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction randomLoc() {\n  return [randomInt(3), randomInt(3), randomInt(tileSize), randomInt(tileSize)];\n}\nfunction rotatePair([x, y]) {\n  let gridSize = 3 * tileSize;\n  return [gridSize - y, x];\n}\nfunction rotationSet([x, y], n = 1) {\n  let gridSize = 3 * tileSize - 1;\n\n  return [\n    [x, y],\n    [gridSize - y, x],\n    [gridSize - x, gridSize - y],\n    [y, gridSize - x]\n  ];\n}\nfunction getLoc(map: any[][][][], loc: number[]): number {\n  let r = loc.reduce((acc, i) => acc[i], map);\n  if (typeof r !== \"number\") {\n    return 0;\n  } else {\n    return r;\n  }\n}\n\nfunction setLoc(map: any[][][][], loc: any[], v: number = 1) {\n  let address = loc.slice(0, -1);\n  let lastPos = loc[loc.length - 1];\n\n  address.reduce((acc, i) => acc[i], map)[lastPos] = v;\n}\n\nexport {\n  newGrid,\n  randomLoc,\n  randomInt,\n  getLoc,\n  setLoc,\n  rotatePair,\n  rotationSet\n};\n","import copy from \"copy-to-clipboard\";\n\nimport { editorRatio, tileSize } from \"./state\";\nimport { getLoc } from \"./utils\";\n\nlet target = <HTMLElement>document.getElementById(\"target\");\n\nlet canvas = <HTMLCanvasElement>document.getElementById(\"editor\");\nlet guideCanvas = <HTMLCanvasElement>document.getElementById(\"guide\");\nlet renderCanvas = <HTMLCanvasElement>document.getElementById(\"render\");\nvar ctx = canvas.getContext(\"2d\");\nvar guideCtx = guideCanvas.getContext(\"2d\");\nvar renderCtx = renderCanvas.getContext(\"2d\");\nrenderCtx.imageSmoothingEnabled = false;\nfunction cleanMap() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n}\nfunction renderMap(map, pixelRatio) {\n  renderCtx.fill();\n\n  for (let sx = 0; sx < 3; sx++) {\n    for (let sy = 0; sy < 3; sy++) {\n      for (let cx = 0; cx < tileSize; cx++) {\n        for (let cy = 0; cy < tileSize; cy++) {\n          let v = getLoc(map, [sx, sy, cx, cy]);\n\n          ctx.fillStyle = v == 1 ? \"#000\" : \"#fff0\";\n          renderCtx.fillStyle = v == 1 ? \"#000\" : \"#fff0\";\n          let gridX = (sx * tileSize + cx) * pixelRatio;\n          let gridY = (sy * tileSize + cy) * pixelRatio;\n          if (sx == 1 && sy == 1) {\n            continue;\n          }\n          renderCtx.clearRect(gridX, gridY, pixelRatio, pixelRatio);\n          renderCtx.fillRect(gridX, gridY, pixelRatio, pixelRatio);\n          gridX *= editorRatio / pixelRatio;\n          gridY *= editorRatio / pixelRatio;\n          ctx.fillRect(gridX + 1, gridY + 1, editorRatio - 1, editorRatio - 1);\n        }\n      }\n    }\n  }\n}\nfunction drawGuide() {\n  for (let index = 1; index < 3; index++) {\n    guideCtx.strokeStyle = \"#33f\";\n    guideCtx.lineWidth = 0.5;\n    let x = (index * canvas.width) / 3;\n    guideCtx.beginPath();\n    guideCtx.moveTo(x, 0);\n    guideCtx.lineTo(x, canvas.height);\n    guideCtx.stroke();\n    guideCtx.beginPath();\n    guideCtx.moveTo(0, x);\n    guideCtx.lineTo(canvas.height, x);\n    guideCtx.stroke();\n  }\n\n  for (let index = 0.0; index < 3 * tileSize; index++) {\n    guideCtx.strokeStyle = \"#ccc\";\n    let x = (index * canvas.width) / (3 * tileSize);\n    guideCtx.beginPath();\n    guideCtx.moveTo(x, 0);\n    guideCtx.lineTo(x, canvas.height);\n    guideCtx.stroke();\n    guideCtx.beginPath();\n    guideCtx.moveTo(0, x);\n    guideCtx.lineTo(canvas.height, x);\n    guideCtx.stroke();\n  }\n  let third = canvas.width / 3;\n  guideCtx.clearRect(third + 1, third + 1, third - 2, third - 2);\n  guideCtx.beginPath();\n  guideCtx.moveTo(third * 1, third * 2);\n  guideCtx.lineTo(third * 2, third * 1);\n  guideCtx.stroke();\n  guideCtx.beginPath();\n  guideCtx.moveTo(third * 1, third * 1);\n  guideCtx.lineTo(third * 2, third * 2);\n  guideCtx.stroke();\n}\n\nfunction setBorder(pixelRatio) {\n  let dataURI = renderCanvas.toDataURL();\n\n  let style = <HTMLStyleElement>document.getElementById(\"border-style\");\n  if (style) style.remove();\n  style = document.createElement(\"style\");\n  style.id = \"border-style\";\n  document.head.appendChild(style);\n\n  let viewsize = tileSize * pixelRatio;\n  let css = `.broider {\n    border-image:  url(\"${dataURI}\") ${viewsize} /  ${viewsize}px / 0 round;\n    border-width:  ${viewsize}px;\n    border-style:  solid;\n}`;\n  style.sheet.insertRule(css);\n  target.textContent = css;\n}\n\nfunction renderHover(map: any[][][][], loc: number[]) {\n  let x = loc[0] * tileSize + loc[2];\n  let y = loc[1] * tileSize + loc[3];\n  ctx.fillStyle = getLoc(map, loc) == 1 ? \"#dde\" : \"#dde\";\n  if (loc[0] == 1 && loc[1] == 1) {\n    return;\n  }\n  ctx.fillRect(\n    x * editorRatio + 0,\n    y * editorRatio + 0,\n    editorRatio - 0,\n    editorRatio - 0\n  );\n}\n\ntarget.addEventListener(\"click\", copyTarget);\nfunction resetCopy() {\n  target.setAttribute(\"data-after\", \"[Click to copy]\");\n}\n\nresetCopy();\nfunction copyTarget() {\n  copy(target.textContent, {\n    message: \"Press #{key} to copy css\"\n  });\n  target.setAttribute(\"data-after\", \"Copied to your clipboard!\");\n  target.classList.remove(\"flash\");\n\n  window.setTimeout(() => {\n    target.classList.add(\"flash\");\n  }, 1);\n  window.setTimeout(resetCopy, 2500);\n}\nexport { renderMap, drawGuide, setBorder, renderHover, cleanMap };\n","import {\n  renderMap,\n  setBorder,\n  renderHover,\n  drawGuide,\n  cleanMap\n} from \"./render\";\n\nimport onePng from \"./assets/1.png\";\nimport twoPng from \"./assets/2.png\";\nimport fourPng from \"./assets/4.png\";\n\nimport { tileSize, editorRatio } from \"./state\";\nimport { newGrid, getLoc, setLoc, rotationSet } from \"./utils\";\nlet penElement = <HTMLElement>document.getElementById(\"pen\");\nlet eraserElement = <HTMLElement>document.getElementById(\"eraser\");\nlet symmetryElement = <HTMLElement>document.getElementById(\"symmetry\");\nlet scaleElement = <HTMLImageElement>document.getElementById(\"scale\");\nlet undoElement = <HTMLImageElement>document.getElementById(\"undo\");\n\nlet frame = <HTMLElement>document.getElementById(\"editor-frame\");\nlet canvas = <HTMLCanvasElement>document.getElementById(\"editor\");\nlet guideCanvas = <HTMLCanvasElement>document.getElementById(\"guide\");\nlet renderCanvas = <HTMLCanvasElement>document.getElementById(\"render\");\ncanvas.width = tileSize * editorRatio * 3;\ncanvas.height = tileSize * editorRatio * 3;\nguideCanvas.width = tileSize * editorRatio * 3;\nguideCanvas.height = tileSize * editorRatio * 3;\n\nlet sizeIndex = 2;\nlet sizeList = [1, 2, 4];\nlet pngList = [onePng, twoPng, fourPng];\nlet pixelRatio = sizeList[sizeIndex];\nrenderCanvas.width = tileSize * pixelRatio * 3;\nrenderCanvas.height = tileSize * pixelRatio * 3;\nscaleElement.addEventListener(\"click\", () => {\n  sizeIndex = (sizeIndex + 1) % sizeList.length;\n  scaleElement.src = pngList[sizeIndex];\n  pixelRatio = sizeList[sizeIndex];\n  renderCanvas.width = tileSize * pixelRatio * 3;\n  renderCanvas.height = tileSize * pixelRatio * 3;\n  renderMap(map, pixelRatio);\n  setBorder(pixelRatio);\n  updateFrameHeight();\n});\nfunction updateFrameHeight() {\n  frame.style.height = canvas.getBoundingClientRect().width + \"px\";\n}\ndocument.addEventListener(\"DOMContentLoaded\", updateFrameHeight);\nwindow.addEventListener(\"resize\", updateFrameHeight);\n\nvar isDown = false;\nvar isErasing = false;\nvar rotationalSymmetry = true;\n\nsymmetryElement.addEventListener(\"click\", e => {\n  rotationalSymmetry = !rotationalSymmetry;\n  symmetryElement.classList.toggle(\"selected\");\n});\n\neraserElement.addEventListener(\"click\", e => {\n  isErasing = true;\n  eraserElement.classList.add(\"selected\");\n  penElement.classList.remove(\"selected\");\n});\n\npenElement.addEventListener(\"click\", e => {\n  isErasing = false;\n  penElement.classList.add(\"selected\");\n  eraserElement.classList.remove(\"selected\");\n});\n\nvar map = newGrid();\nlet undoStack = [JSON.stringify(map)];\nfunction pushUndo() {\n  let candidate = JSON.stringify(map);\n  let top = undoStack[undoStack.length - 1];\n  if (candidate == top) {\n    return;\n  }\n\n  undoStack.push(candidate);\n\n  if (undoStack.length > 50) {\n    undoStack.shift();\n  }\n  undoElement.classList.add(\"selected\");\n}\nfunction popUndo() {\n  undoStack.pop();\n  let old = undoStack[undoStack.length - 1];\n  if (old) {\n    map = JSON.parse(old);\n    cleanMap();\n    renderMap(map, pixelRatio);\n    setBorder(pixelRatio);\n  }\n}\nundoElement.addEventListener(\"click\", e => {\n  popUndo();\n  if (undoStack.length < 2) {\n    undoElement.classList.remove(\"selected\");\n  }\n  e.preventDefault();\n});\ndrawGuide();\nrenderMap(map, pixelRatio);\nsetBorder(pixelRatio);\n\nfunction draw(loc, v) {\n  if (isDown) {\n    setLoc(map, loc, 1 - v);\n  }\n}\nlet handleEvent = (e, isClick = false, isHover = false) => {\n  let { left, top, width, height } = canvas.getBoundingClientRect();\n  let x = e.clientX - left;\n  let y = e.clientY - top;\n  let canvasX = (x / width) * canvas.width;\n  let canvasY = (y / height) * canvas.height;\n  let gridX = Math.floor(canvasX / editorRatio);\n  let gridY = Math.floor(canvasY / editorRatio);\n\n  let rotatePairs = rotationalSymmetry\n    ? rotationSet([gridX, gridY])\n    : [[gridX, gridY]];\n\n  cleanMap();\n  // renderMap(map,pixelRatio);\n\n  rotatePairs.forEach(([gridX, gridY]) => {\n    let sx = Math.floor(gridX / tileSize);\n    let sy = Math.floor(gridY / tileSize);\n    let cx = gridX % tileSize;\n    let cy = gridY % tileSize;\n    let loc = [sx, sy, cx, cy];\n\n    if (sx < 0 || sx > 2 || sy < 0 || sy > 2) {\n      return;\n    }\n    if (isHover) {\n      renderHover(map, loc);\n    }\n    let v = getLoc(map, loc);\n\n    if (!isClick) {\n      v = 0;\n    }\n\n    if (isErasing) {\n      v = 1;\n    }\n    draw(loc, v);\n  });\n  renderMap(map, pixelRatio);\n  window.setTimeout(() => setBorder(pixelRatio), 0);\n};\n\ncanvas.addEventListener(\"mousedown\", e => {\n  isDown = true;\n  handleEvent(e, true);\n});\ncanvas.addEventListener(\"mousemove\", e => {\n  handleEvent(e, false, true);\n});\ncanvas.addEventListener(\"mouseout\", e => {\n  cleanMap();\n  renderMap(map, pixelRatio);\n});\nwindow.addEventListener(\"mousedown\", () => {\n  isDown = true;\n});\nwindow.addEventListener(\"mouseup\", () => {\n  isDown = false;\n  pushUndo();\n});\ncanvas.addEventListener(\"touchend\", e => {\n  isDown = false;\n  pushUndo();\n});\ncanvas.addEventListener(\"touchstart\", e => {\n  isDown = true;\n\n  e.preventDefault();\n\n  const touches = e.targetTouches;\n  for (let i = 0; i < touches.length; i++) {\n    e[\"clientX\"] = touches[i].clientX;\n    e[\"clientY\"] = touches[i].clientY;\n    handleEvent(e);\n  }\n});\ncanvas.addEventListener(\"touchmove\", e => {\n  e.preventDefault();\n  isDown = true;\n\n  const touches = e.targetTouches;\n  for (let i = 0; i < touches.length; i++) {\n    e[\"clientX\"] = touches[i].clientX;\n    e[\"clientY\"] = touches[i].clientY;\n    handleEvent(e);\n  }\n});\nlet lastTouchEnd = 0;\nwindow.addEventListener(\"touchend\", e => {\n  //prevent double tap zoom\n  if (e.timeStamp - lastTouchEnd <= 500) {\n    e.preventDefault();\n    e.target.click();\n  }\n  isDown = false;\n  lastTouchEnd = e.timeStamp;\n});\n"]}